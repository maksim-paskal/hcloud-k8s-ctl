hetznerToken:
  main: some-token-string
  csi: null
  ccm: null
clusterName: k8s
location: nbg1
deployments:
  nfs:
    server:
      enabled: false
      clusterIP: 10.100.0.100
    nfs-subdir-external-provisioner:
      enabled: false
  registry:
    enabled: false
    replicas: 2
    secret: somesecret
    image: registry:2.8.1
    imagePullPolicy: IfNotPresent
    clusterIP: "10.100.0.11"
    service:
      type: ClusterIP
    env: {}
    resources:
      requests:
        cpu: 10m
        memory: 100Mi

hcloud-cloud-controller-manager:
  replicaCount: 2
  env:
    NODE_NAME:
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    HCLOUD_NETWORK_ROUTES_ENABLED:
      value: "false"
    HCLOUD_NETWORK:
      valueFrom:
        configMapKeyRef:
          name: hcloud-ccm-env
          key: HCLOUD_NETWORK
    HCLOUD_LOAD_BALANCERS_USE_PRIVATE_IP:
      value: "true"
    HCLOUD_LOAD_BALANCERS_LOCATION:
      valueFrom:
        configMapKeyRef:
          name: hcloud-ccm-env
          key: HCLOUD_LOAD_BALANCERS_LOCATION

nfs-subdir-external-provisioner:
  replicaCount: 2
  fullnameOverride: nfs-subdir-external-provisioner
  resources:
    limits:
      cpu: 100m
      memory: 300Mi
  nfs:
    server: 10.100.0.100
    path: /
    mountOptions:
    - nconnect=8  # only supported on linux kernel version >= 5.3
    - nfsvers=4.1
  storageClass:
    name: nfs
    archiveOnDelete: false

kubelet-csr-approver:
  bypassDnsResolution: true

cluster-autoscaler:
  replicaCount: 2
  priorityClassName: system-cluster-critical
  resources:
    requests:
      cpu: 100m
      memory: 300Mi
  tolerations:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
  - effect: NoSchedule
    key: node-role.kubernetes.io/control-plane
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - cluster-autoscaler
        topologyKey: kubernetes.io/hostname
  cloudProvider: hetzner
  autoDiscovery:
    clusterName: k8s
  extraArgs:
    expander: least-waste
    scale-down-enabled: true
    skip-nodes-with-local-storage: false
    skip-nodes-with-system-pods: false
    scale-down-utilization-threshold: 0.8
  envFromConfigMap: "cluster-autoscaler-env"
  extraEnvConfigMaps:
    HCLOUD_CLOUD_INIT:
      name: hcloud-init
      key: bootstrap
  extraEnvSecrets:
    HCLOUD_TOKEN:
      name: hcloud
      key: token

hcloud-csi:
  controller:
    resources:
      csiAttacher:
        requests:
          cpu: 10m
          memory: 50Mi
      csiResizer:
        requests:
          cpu: 10m
          memory: 50Mi
      csiProvisioner:
        requests:
          cpu: 10m
          memory: 50Mi
      livenessProbe:
        requests:
          cpu: 10m
          memory: 50Mi
      hcloudCSIDriver:
        requests:
          cpu: 10m
          memory: 50Mi
    hcloudToken:
      existingSecret:
        name: hcloud-csi
        key: token
  node:
    resources:
      csiNodeDriverRegistrar:
        requests:
          cpu: 10m
          memory: 50Mi
      livenessProbe:
        requests:
          cpu: 10m
          memory: 50Mi
      hcloudCSIDriver:
        requests:
          cpu: 10m
          memory: 50Mi